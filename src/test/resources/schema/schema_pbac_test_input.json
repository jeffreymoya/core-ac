{
  "writeSchema": {
    "schema": "// user represents a user\n  definition user {}\n\n  definition organization {\n    relation group: usergroup\n    relation administrator: user | usergroup#member | usergroup#system_administrator | usergroup#security_administrator\n    relation direct_member: user | usergroup#member | usergroup#direct_member | usergroup#system_administrator | usergroup#security_administrator\n\n    permission admin = administrator\n    permission member = direct_member + administrator + group->member\n  }\n\n  definition usergroup {\n    relation system_administrator : user | usergroup#member | usergroup#system_administrator\n    relation security_administrator : user | usergroup#member | usergroup#security_administrator\n    relation direct_member: user | usergroup#member | usergroup#system_administrator | usergroup#security_administrator | usergroup#direct_member\n\n    permission system_admin = system_administrator\n    permission security_admin = security_administrator\n    permission member = direct_member\n  }\n\n  // policy represents a policy\n  definition policy{\n    relation group : usergroup\n    relation policy_manager : user | usergroup#security_admin | usergroup#security_administrator\n    relation policy_member : user | usergroup#member | usergroup#system_administrator | usergroup#system_admin | usergroup#direct_member\n    relation policy_creator : user | usergroup#security_admin | usergroup#security_administrator\n\n    permission create_policy = policy_creator + policy_manager\n    permission view_policy = policy_creator + policy_manager + policy_member\n    permission edit_policy = policy_creator + policy_manager\n    permission delete_policy = group->security_administrator\n  \n    // assign policy to someone\n    // view audit logs of policy\n  }\n\n  // test - usermanagement policy\n  definition policy/usermanagement{\n    relation owner : user \n    relation viewer : usergroup#member | usergroup#direct_member\n    relation admin : usergroup#system_admin | usergroup#system_administrator\n  \n    permission view_profile = viewer\n    permission edit_contact = owner + admin\n    permission delete_profile = owner + admin\n\n  }\n\n  //\n  // For testing conditional scenarios\n  // \n\n  caveat has_valid_ip(user_ip ipaddress, allowed_range string) {\n    user_ip.in_cidr(allowed_range)\n  }\n\n  caveat is_weekend(today string){\n    today == 'saturday' || today == 'sunday'\n  }\n\n  caveat attributes_match(expected map<any>, provided map<any>){\n  expected.isSubtreeOf(provided)\n}"
  },
  "createRelationships": {
    "updates": [
      {
        "objectType": "usergroup",
        "objectId": "securityAdminGrp",
        "relation": "security_administrator",
        "subjRefObjType": "user",
        "subjRefObjId": "securityAdmin"
      },
      {
        "objectType": "organization",
        "objectId": "org1",
        "relation": "administrator",
        "subjRefObjType": "usergroup",
        "subjRefObjId": "securityAdminGrp",
        "subjRelation": "security_administrator"
      },
      {
        "objectType": "organization",
        "objectId": "org1",
        "relation": "group",
        "subjRefObjType": "usergroup",
        "subjRefObjId": "securityAdminGrp"
      },
      {
        "objectType": "policy",
        "objectId": "usermanagement",
        "relation": "policy_creator",
        "subjRefObjType": "usergroup",
        "subjRefObjId": "securityAdminGrp",
        "subjRelation": "security_administrator"
      },
      {
        "objectType": "policy",
        "objectId": "usermanagement",
        "relation": "policy_manager",
        "subjRefObjType": "usergroup",
        "subjRefObjId": "securityAdminGrp",
        "subjRelation": "security_administrator"
      },
      {
        "objectType": "policy/usermanagement",
        "objectId": "userProfileA",
        "relation": "owner",
        "subjRefObjType": "user",
        "subjRefObjId": "customerA"
      },
      {
        "objectType": "policy/usermanagement",
        "objectId": "userProfileA",
        "relation": "admin",
        "subjRefObjType": "usergroup",
        "subjRefObjId": "systemAdminGrp",
        "subjRelation": "system_administrator"
      },
      {
        "objectType": "policy/usermanagement",
        "objectId": "userProfileA",
        "relation": "viewer",
        "subjRefObjType": "usergroup",
        "subjRefObjId": "customerB",
        "subjRelation": "direct_member"
      },
      {
        "objectType": "policy/usermanagement",
        "objectId": "userProfileB",
        "relation": "owner",
        "subjRefObjType": "user",
        "subjRefObjId": "customerB"
      },
      {
        "objectType": "policy/usermanagement",
        "objectId": "userProfileB",
        "relation": "admin",
        "subjRefObjType": "usergroup",
        "subjRefObjId": "systemAdminGrp",
        "subjRelation": "system_administrator"
      },
      {
        "objectType": "policy/usermanagement",
        "objectId": "userProfileB",
        "relation": "viewer",
        "subjRefObjType": "usergroup",
        "subjRefObjId": "customerB",
        "subjRelation": "direct_member"
      }
    ]
  },
  "checkPermission": {
    "customerB": {
      "editContact": {
        "objectType": "policy/usermanagement",
        "objectId": "userProfileA",
        "subjRefObjType": "user",
        "subjRefObjId": "customerB",
        "permission": "edit_contact"
      }
    }
  },
  "lookup": {
    "subjects": {
      "request": {
        "objectType": "policy",
        "objectId": "usermanagement",
        "permission": "create_policy",
        "subjectObjectType": "usergroup",
        "subjRelation": "security_administrator"
      },
      "response": [
        {
          "permission": 1,
          "subjectObjectId": "securityAdminGrp"
        }
      ]
    },
    "resources": {
      "request": {
        "resourceObjectType": "policy",
        "subjRefObjType": "usergroup",
        "subjRefObjId": "securityAdminGrp",
        "subjRelation": "security_administrator",
        "permission": "policy_manager"
      },
      "response": [
        {
          "permission": 1,
          "resourceObjectId": "usermanagement"
        }
      ]
    }
  },
  "policy": {
    "name": "policytest",
    "description": "this is a test insert",
    "roles": [
      {
        "name": "group",
        "subjects": [
          "usergroup"
        ]
      },
      {
        "name": "policy_manager",
        "subjects": [
          "user",
          "usergroup#security_admin",
          "usergroup#security_administrator"
        ]
      },
      {
        "name": "policy_member",
        "subjects": [
          "user",
          "usergroup#member",
          "usergroup#system_administrator",
          "usergroup#system_admin",
          "usergroup#direct_member"
        ]
      },
      {
        "name": "policy_creator",
        "subjects": [
          "user",
          "usergroup#security_admin",
          "usergroup#security_administrator"
        ]
      }
    ],
    "permissions": [
      {
        "name": "create",
        "rolesOr": [
          "policy_creator",
          "policy_manager"
        ],
        "rolesAnd": null
      },
      {
        "name": "view",
        "rolesOr": [
          "policy_creator",
          "policy_manager",
          "policy_member"
        ],
        "rolesAnd": null
      },
      {
        "name": "update",
        "rolesOr": [
          "policy_creator",
          "policy_manager"
        ],
        "rolesAnd": null
      },
      {
        "name": "delete",
        "rolesOr": [
          "group->security_admin"
        ],
        "rolesAnd": null
      }
    ],
    "attributes": {
      "sensitivity": "confidential",
      "classification": "legal",
      "access": "local"
    },
    "access": "allow"
  }
}