/** schema for pulse8 */
/** user represents a user */
definition user {}

definition echo {
    relation viewer: user | user:*
    permission view = viewer
}

definition policy01 {
    relation administrator: policy01#administrator
    relation member: user
    permission admin = administrator
    permission view = administrator
    permission update = administrator
    permission delete = administrator
    permission create = administrator
}

definition organization{
    relation member : user
    relation admin : user

    permission create = admin
    permission update = admin
    permission delete = admin
    permission view = admin + member
}

caveat attributes_match(expected map<any>, provided map<any>) {
    expected.isSubtreeOf(provided)
}


caveat expected_ip_range(user_ip ipaddress, allowed_range string) {
    user_ip.in_cidr(allowed_range)
}

caveat time_of_day_restriction(now string, start_hour int, start_minutes int, end_hour int, end_minutes int, timezone_offset string) {
    (
        timestamp(now).getHours(timezone_offset) > start_hour ||
        (
            timestamp(now).getHours(timezone_offset) == start_hour && 
            timestamp(now).getMinutes(timezone_offset) > start_minutes
        ) ||
        (
            timestamp(now).getHours(timezone_offset) == start_hour && 
            timestamp(now).getMinutes(timezone_offset) == start_minutes && 
            timestamp(now).getSeconds(timezone_offset) > 0
        ) ||
        (
            timestamp(now).getHours(timezone_offset) == start_hour && 
            timestamp(now).getMinutes(timezone_offset) == start_minutes && 
            timestamp(now).getSeconds(timezone_offset) == 0 && 
            timestamp(now).getMilliseconds(timezone_offset) >= 0
        )
    ) &&
    (
        timestamp(now).getHours(timezone_offset) < end_hour ||
        (
            timestamp(now).getHours(timezone_offset) == end_hour && 
            timestamp(now).getMinutes(timezone_offset) < end_minutes
        ) ||
        (
            timestamp(now).getHours(timezone_offset) == end_hour && 
            timestamp(now).getMinutes(timezone_offset) == end_minutes && 
            timestamp(now).getSeconds(timezone_offset) == 0 && 
            timestamp(now).getMilliseconds(timezone_offset) == 0
        )
    )
}
