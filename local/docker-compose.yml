version: "3"

services:
  postgres:
    image: postgres:16.1
    container_name: postgres
    restart: always
    ports:
        - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
        POSTGRES_USER: ${POSTGRES_USER}
        PGUSER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_DB: ${POSTGRES_DB}
    command: postgres -c track_commit_timestamp=on
    healthcheck:
      test: /usr/bin/pg_isready
      interval: 5s
      timeout: 10s
      retries: 120
    networks:
      - pulse8-central-bridge
  spicedb:
    container_name: "spicedb"
    image: authzed/spicedb:v1.29.0
    ports:
      - "50051:50051"
    build:
      context: ./spicedb
      args:
        - user=${POSTGRES_USER}
        - pwd=${POSTGRES_PASSWORD}
        - postgres_db=${POSTGRES_DB}
        - postgres_port=${POSTGRES_PORT}
        - postgres_host=postgres
        - spicedb_host=spicedb
        - spicedb_key=${SPICEDB_PRESHARED_KEY}
      dockerfile: Dockerfile
    volumes:
        - ./spicedb:/app
    environment:
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:50051 -Xms256m -Xmx4G"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - pulse8-central-bridge
  pulse8-core-access-control:
    container_name: pulse8-core-access-control
    image: pulse8-core-access-control:latest
    depends_on:
      - spicedb
    ports:
      - "3010:3010"
      - "5010:5010"
    networks:
      - pulse8-central-bridge
    environment:
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5010 -Xms256m -Xmx4G"
      SPICEDB_HOST: spicedb
      SPICEDB_PORT: 50051
      SPICEDB_PRESHARED_KEY: test_key
      MONGODB_URI: mongodb://mongodb:27017/p8c-core-access-control
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SCHEMA_REGISTRY_URL: "http://schemaregistry:8081"
      SPRING_KAFKA_PRODUCER_ACKS: all
  echo-server:
    container_name: "echoserver"
    image: inanimate/echo-server:latest
    ports:
      - "3000:8080"
    networks:
      - pulse8-central-bridge
  kong:
    image: kong/kong-gateway:3.6
    container_name: pulse8-kong
    env_file:
      - docker-compose.env
    environment:
      KONG_CLUSTER_CERT_KEY: /certs/cluster.key
      KONG_CLUSTER_CERT: /certs/cluster.crt
      KONG_DECLARATIVE_CONFIG: "/opt/kong/kong.yaml"
      KONG_LUA_PACKAGE_PATH: /opt/kong/plugins/checkpermission/?.lua;;
      KONG_PLUGINS: bundled,checkpermission
      KONG_LOG_LEVEL: debug
    volumes:
      - ./certs:/certs
      - ./config:/opt/kong
    ports:
      - 8000:8000
    networks:
      - pulse8-central-bridge
  mongodb:
    image: mongo:7.0.5
    container_name: mongodb
    ports:
      - "27017:27017"
    networks:
      - pulse8-central-bridge
  zookeeper:
    container_name: pulse8-zookeeper-ac
    image: confluentinc/cp-zookeeper:7.2.2
    environment:
      ZOOKEEPER_CLIENT_PORT: 2182
    ports:
      - 2182:2182
    networks:
      - pulse8-central-bridge
  kafka:
    container_name: pulse8-kafka-ac
    image: confluentinc/cp-kafka:7.2.2
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2182
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_SCHEMA_REGISTRY_URL: "schemaregistry:8084"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    ports:
      - 9092:9092
    networks:
      - pulse8-central-bridge
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  schemaregistry:
    container_name: pulse8-schemaregistry-ac
    image: confluentinc/cp-schema-registry:7.2.2
    depends_on:
      - zookeeper
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper:2182"
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "PLAINTEXT://kafka:9092"
      SCHEMA_REGISTRY_HOST_NAME: schemaregistry
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
    ports:
      - 8081:8081
    networks:
      - pulse8-central-bridge
networks:
  pulse8-central-bridge:
    name: pulse8-central-bridge
    driver: bridge