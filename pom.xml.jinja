<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.1.3</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>{{group_id}}</groupId>
    <artifactId>{{artifact_id_raw}}</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>{{ project_name }}</name>
    {% if project_description != '' %}<description>{{project_description}}</description>{% endif %}

    <properties>
        <java.version>17</java.version>
        <spring-cloud.version>2022.0.4</spring-cloud.version>
{% if add_spock %}        <spock.version>2.3-groovy-4.0</spock.version>
        <gmavenplus.version>3.0.0</gmavenplus.version>
{% endif %}{% if add_keycloak %}        <keycloak.version>22.0.2</keycloak.version>
{% endif %}{% if add_kafka_schema_registry %}        <kafka-confluent.version>7.4.0</kafka-confluent.version>
        <avro.version>1.11.3</avro.version>
{% endif %}        <jacoco.version>0.8.10</jacoco.version>
        <cucumber.version>7.14.0</cucumber.version>
        <junit-jupiter-engine.version>5.9.3</junit-jupiter-engine.version>
        <junit-vintage-engine.version>5.9.3</junit-vintage-engine.version>
        <sonar-maven-plugin.version>3.9.1.2184</sonar-maven-plugin.version>
        <maven-surefire-plugin.version>3.1.2</maven-surefire-plugin.version>
        <jib-maven-plugin.version>3.3.2</jib-maven-plugin.version>
        <apache-commons.version>3.13.0</apache-commons.version>

        <sonar.exclusions>
            **/P8CApplication.java,
            **/P8C*Config.java,
            **/{{artifact_id}}/config/**.java,
            **/{{artifact_id}}/kafka/**.java,
            **/{{artifact_id}}/entity/**.java,
            **/{{artifact_id}}/controller/**.java,
            **/{{artifact_id}}/repository/**.java
        </sonar.exclusions>
	  </properties>
      {% if add_kafka_schema_registry %}
      <repositories>
        <repository>
            <id>confluent</id>
            <url>https://packages.confluent.io/maven/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
      </repositories>
      {% endif %}

    <dependencies>
        <!-- Spring core -->
        {% if add_database %}<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-rest</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>{% endif %}
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-openfeign</artifactId>
        </dependency>

        <!-- Authentication -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-oauth2-client</artifactId>
        </dependency>

{% if add_database %}        <!-- Database -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>
{% if add_liquibase %}        <dependency>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-core</artifactId>
        </dependency>{% endif %}{% endif %}

        <!-- Services -->
{% if add_kafka %}        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka</artifactId>
        </dependency>{% if add_kafka_schema_registry %}
        <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>kafka-schema-registry-client</artifactId>
            <version>${kafka-confluent.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.avro</groupId>
            <artifactId>avro</artifactId>
            <version>${avro.version}</version>
        </dependency>
        <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>kafka-avro-serializer</artifactId>
            <version>${kafka-confluent.version}</version>
        </dependency>
        <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>kafka-streams-avro-serde</artifactId>
            <version>${kafka-confluent.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
            </exclusions>
        </dependency>{% endif %}{% endif %}

        <!-- Build tools -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- Testing -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
{% if add_spock %}        <dependency>
            <groupId>org.spockframework</groupId>
            <artifactId>spock-core</artifactId>
            <version>${spock.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.spockframework</groupId>
            <artifactId>spock-spring</artifactId>
            <version>${spock.version}</version>
            <scope>test</scope>
        </dependency>{% endif %}
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-junit</artifactId>
            <version>${cucumber.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-spring</artifactId>
            <version>${cucumber.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-java</artifactId>
            <version>${cucumber.version}</version>
            <scope>test</scope>
        </dependency>
{% if add_kafka %}        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka-test</artifactId>
            <scope>test</scope>
        </dependency>{% endif %}
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <version>${junit-vintage-engine.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Utils -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${apache-commons.version}</version>
        </dependency>
    </dependencies>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
{% if add_keycloak %}            <dependency>
                <groupId>org.keycloak.bom</groupId>
                <artifactId>keycloak-adapter-bom</artifactId>
                <version>${keycloak.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>{% endif %}
        </dependencies>
    </dependencyManagement>

    <profiles>
        <profile>
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>{% if add_kafka_schema_registry %}
                    <plugin>
                        <groupId>org.apache.avro</groupId>
                        <artifactId>avro-maven-plugin</artifactId>
                        <version>${avro.version}</version>
                        <executions>
                            <execution>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>schema</goal>
                                </goals>
                                <configuration>
                                    <sourceDirectory>src/main/resources/avro</sourceDirectory>
                                    <outputDirectory>${project.build.directory}/generated-sources</outputDirectory>
                                    <stringType>String</stringType>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>{% endif %}
                    <plugin>
                        <groupId>org.sonarsource.scanner.maven</groupId>
                        <artifactId>sonar-maven-plugin</artifactId>
                        <version>${sonar-maven-plugin.version}</version>
                    </plugin>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>${jacoco.version}</version>
                        <configuration>
                            <destFile>${session.executionRootDirectory}/target/jacoco.exec</destFile>
                            <append>true</append>
                            <excludes>
                                <exclude>**org.drools*</exclude>
                            </excludes>
                        </configuration>
                        <executions>
                            <execution>
                                <id>jacoco-agent-init</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>default-report</id>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${maven-surefire-plugin.version}</version>
                        <dependencies>
                            <dependency>
                                <groupId>org.junit.jupiter</groupId>
                                <artifactId>junit-jupiter-engine</artifactId>
                                <version>${junit-jupiter-engine.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <configuration>
                            <classifier>exec</classifier>
                            <excludes>
                                <exclude>
                                    <groupId>org.projectlombok</groupId>
                                    <artifactId>lombok</artifactId>
                                </exclude>
                            </excludes>
                        </configuration>
                    </plugin>
{% if add_spock %}                    <plugin>
                        <groupId>org.codehaus.gmavenplus</groupId>
                        <artifactId>gmavenplus-plugin</artifactId>
                        <version>${gmavenplus.version}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>compileTests</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>{% endif %}
                </plugins>
            </build>
        </profile>

        <profile>
            <id>ci</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <repositories>
                <repository>
                    <snapshots>
                        <enabled>false</enabled>
                    </snapshots>
                    <id>central</id>
                    <name>synpulse-artifactory-primary-0-releases</name>
                    <url>https://synpulse.jfrog.io/artifactory/s8-libs-release</url>
                </repository>
                <repository>
                    <id>snapshots</id>
                    <name>synpulse-artifactory-primary-0-snapshots</name>
                    <url>https://synpulse.jfrog.io/artifactory/s8-libs-snapshot</url>
                </repository>
            </repositories>
            <build>
                <plugins>{% if add_kafka_schema_registry %}
                    <plugin>
                        <groupId>org.apache.avro</groupId>
                        <artifactId>avro-maven-plugin</artifactId>
                        <version>${avro.version}</version>
                        <executions>
                            <execution>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>schema</goal>
                                </goals>
                                <configuration>
                                    <sourceDirectory>src/main/resources/avro</sourceDirectory>
                                    <outputDirectory>${project.build.directory}/generated-sources</outputDirectory>
                                    <stringType>String</stringType>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>{% endif %}
                    <plugin>
                        <groupId>com.google.cloud.tools</groupId>
                        <artifactId>jib-maven-plugin</artifactId>
                        <version>${jib-maven-plugin.version}</version>
                        <configuration>
                            <container>
                                <mainClass>{{group_id}}.{{artifact_id}}.P8CApplication</mainClass>
                            </container>
                            <from>
                                <image>gcr.io/distroless/java17</image>
                                <platforms>
                                    <platform>
                                        <architecture>amd64</architecture>
                                        <os>linux</os>
                                    </platform>
                                </platforms>
                            </from>
                            <to>
                                <image>{{project_id}}</image>
                            </to>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>sonar</id>
            <properties>
                <sonar.host.url>https://sonarcloud.io</sonar.host.url>
                <sonar.organization>synpulse-group</sonar.organization>
                <sonar.projectKey>synpulse-group_{{sonar_project_key_suffix}}</sonar.projectKey>
                <sonar.moduleKey>${project.groupId}:${project.artifactId}</sonar.moduleKey>
            </properties>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <repositories>
                <repository>
                    <snapshots>
                        <enabled>false</enabled>
                    </snapshots>
                    <id>central</id>
                    <name>synpulse-artifactory-primary-0-releases</name>
                    <url>https://synpulse.jfrog.io/artifactory/s8-libs-release</url>
                </repository>
                <repository>
                    <snapshots/>
                    <id>snapshots</id>
                    <name>synpulse-artifactory-primary-0-snapshots</name>
                    <url>https://synpulse.jfrog.io/artifactory/s8-libs-snapshot</url>
                </repository>
            </repositories>
            <pluginRepositories>
                <pluginRepository>
                    <id>central</id>
                    <name>synpulse-artifactory-primary-0-releases</name>
                    <url>https://synpulse.jfrog.io/artifactory/s8-libs-release</url>
                </pluginRepository>
                <pluginRepository>
                    <id>snapshots</id>
                    <name>synpulse-artifactory-primary-0-snapshots</name>
                    <url>https://synpulse.jfrog.io/artifactory/s8-libs-snapshot</url>
                </pluginRepository>
            </pluginRepositories>
            <build>
                <plugins>{% if add_kafka_schema_registry %}
                    <plugin>
                        <groupId>org.apache.avro</groupId>
                        <artifactId>avro-maven-plugin</artifactId>
                        <version>${avro.version}</version>
                        <executions>
                            <execution>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>schema</goal>
                                </goals>
                                <configuration>
                                    <sourceDirectory>src/main/resources/avro</sourceDirectory>
                                    <outputDirectory>${project.build.directory}/generated-sources</outputDirectory>
                                    <stringType>String</stringType>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>{% endif %}
                    <plugin>
                        <groupId>org.sonarsource.scanner.maven</groupId>
                        <artifactId>sonar-maven-plugin</artifactId>
                        <version>${sonar-maven-plugin.version}</version>
                    </plugin>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>${jacoco.version}</version>
                        <configuration>
                            <destFile>${session.executionRootDirectory}/target/jacoco.exec</destFile>
                            <append>true</append>
                            <excludes>
                                <exclude>**org.drools*</exclude>
                            </excludes>
                        </configuration>
                        <executions>
                            <execution>
                                <id>jacoco-agent-init</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>default-report</id>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${maven-surefire-plugin.version}</version>
                        <dependencies>
                            <dependency>
                                <groupId>org.junit.jupiter</groupId>
                                <artifactId>junit-jupiter-engine</artifactId>
                                <version>${junit-jupiter-engine.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
