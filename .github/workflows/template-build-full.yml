name: PULSE8-CORE BACKEND TEMPLATE BUILD FULL CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  IMAGE_REGISTRY: ghcr.io
  SVC_NAME: pulse8-core-backend-template-build-full
  IMAGE_NAME: pulse8-core-backend-template-build-full-${{ github.ref_name }}
  MAVEN_OPTS: -Djava.awt.headless=true
  MAVEN_CLI_OPTS: -Dmaven.repo.local=./.m2/repository --batch-mode
  AWS_REGION: ap-southeast-1
  EKS_CLUSTER_NAME: pulse8-cluster
  AWS_ROLE: arn:aws:iam::105815711361:role/github-actions-oidc-role
  SERVER_USERNAME: ${{ secrets.JFROG_USER }}
  SERVER_PASSWORD: ${{ secrets.JFROG_TOKEN }}

permissions:
  contents: read
  id-token: write

defaults:
  run:
    working-directory: ./builds/full

jobs:
  buildAndPushImage:
    runs-on: ubuntu-latest
    environment:
      name: ${{github.ref_name}}
    steps:
      - uses: actions/checkout@v3

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "zulu"

      - name: "Cache Maven packages"
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: "Build and push Spring backend template container"
        uses: synpulse-group/s8-actions/custom-build-push-container@main
        with:
          docker-build-context-location: ./builds/full
          docker-file-path: ./builds/full/Dockerfile
          jfrog-user: ${{ secrets.JFROG_USER }}
          jfrog-password: ${{ secrets.JFROG_TOKEN }}

      - name: "Cache SonarCloud packages"
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: "Analyze with SonarCloud"
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -s ./settings.xml -P sonar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
